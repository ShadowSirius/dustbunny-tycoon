#summary The algorithm we are simulating

= Application Specification =

 * Delay tolerant
 * Loss tolerant
 * Relatively limited packet size (say 64-256 kb)
 * Independent packets - ie no segmentation and reassembly OR use of fountain/erasure ECCs (ex. [http://en.wikipedia.org/wiki/Raptor_code raptor codes])

= Information From Sources =

 * We are dealing with task-oriented mobility in ferries (defn from [http://portal.acm.org/citation.cfm?id=989483] - this sources deals with message oriented mobility)
 * I was originally considering a scheme where nodes cluster and 'gateway nodes' (not to be confused with the gateway nodes as defined in the network entities section below) are responsible for communicating with ferries (terminology from section 6 of [http://portal.acm.org/citation.cfm?id=989483])

== Existing Algorithms ==

 * MANET protocols (DSDV, OSLR, AODV, DSR) only work for connected subgraphs (from [http://portal.acm.org/citation.cfm?id=1015484&dl=GUIDE&coll=GUIDE&CFID=82345016&CFTOKEN=82922258 Routing in a delay tolerant network])

= Our Simulation Implementation =

== Network Entities (ie Node Types) ==

*Source:* Nodes which generate messages to be delivered to gateways. A message from any source can be delivered to any gateway.

*Ferry:* Mobile transport mechanisms for messages. Provided a delayed link to transport messages from source nodes to destination gateways.

*Gateway:* The destination for messages. Idea is that gateways connect to the internet. Once messages reach a gateway, they are routed through the internet to their final destination.

== General Algorithms Considerations ==

 * Packet timeout (from [http://portal.acm.org/citation.cfm?id=989483])
 * Use location aware partitions and ferries?
 * Are we implementing a routing algorithm or a simpler delivery algorithm
   * Routing can either be 'source routing' or 'per-hop' routing (from [http://portal.acm.org/citation.cfm?id=1015484&dl=GUIDE&coll=GUIDE&CFID=82345016&CFTOKEN=82922258 Routing in a delay tolerant network])
 * Do source nodes store messages for inter-ferry transfer (ie message path: src1 -> f1 -> src2 -> f2 -> gateway)

== Simplifications and Assumptions ==

 * All or nothing wireless links (ie no fading - either two nodes can transmit or they cant)